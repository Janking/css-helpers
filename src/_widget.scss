@charset "utf-8";
/**
 * [mobile-font-init] : 移动端字体初始化设置
 *
 * #example :
 *
 * 例如750px设计稿上320px*200px字体大小为32px的区域样式为：
 *
 * .div_ex{ width:3.2rem; height:2rem; font-size:0.32rem }
 *
 * 更多例子请查看 /examples/index.html
 *
 */

@mixin mobile-font-init() {
    html {
        font-size: 312.5%;
    }
    @media screen and (max-width:359px) and (orientation:portrait) {
        html {
            font-size: 266.67%;
        }
    }
    @media screen and (min-width:360px) and (max-width:374px) and (orientation:portrait) {
        html {
            font-size: 300%;
        }
    }
    @media screen and (min-width:384px) and (max-width:399px) and (orientation:portrait) {
        html {
            font-size: 320%;
        }
    }
    @media screen and (min-width:400px) and (max-width:413px) and (orientation:portrait) {
        html {
            font-size: 333.33%;
        }
    }
    @media screen and (min-width:414px) and (max-width:431px) and (orientation:portrait) {
        html {
            font-size: 345%;
        }
    }
    @media screen and (min-width:432px) and (max-width:479px) and (orientation:portrait) {
        html {
            font-size: 360%;
        }
    }
    @media screen and (min-width:480px)and (max-width:639px) and (orientation:portrait) {
        html {
            font-size: 400%;
        }
    }
    @media screen and (min-width:640px) and (orientation:portrait) {
        html {
            font-size: 533.33%;
        }
    }
}


/**
 * [ellipsis] : 文本超出用「...」代替
 */

@mixin ellipsis() {
    white-space: nowrap;
    word-break: keep-all;
    overflow: hidden;
    text-overflow: ellipsis;
}

/**
 * [movie-fluid]   响应式视频
 */
@mixin movie-fluid() {
    position: relative;
    padding-bottom: 56.25%;
    height: 0;
    & iframe {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
    }
}

/**
 * [abs-center]   移动端不定宽高元素水平垂直居中于最近的position:relative父元素，不传$offset则占据父元素宽高
 * @param {[Number,Pixel]} $offset [子元素与父元素边距，如：10px]
 */
 @mixin abs-center($offset: 0){
    display: block;
    position: absolute;
    top: $offset;
    left: $offset;
    right: $offset;
    bottom: $offset;
 }

/**
 * [triangle]   
 * @param {[String]}        $direction [三角形尖角方向，如：'up','right','down','left']
 * @param {[Number,Pixel]}  $w         [三角形底边长度（尖角对边），如：10px]
 * @param {[Number,Pixel]}  $h         [三角形高（与底边垂直），如：20px]
 * @param {[color]}         $bgColor      [背景色值，如：#bbbbbb]
 * @param {[String]}        $pseudo    [定义伪元素类型，如：'after','before']
 */
@mixin triangle($direction: 'down', $w: 15px,$h: 15px, $bgColor: #55cbe3, $pseudo: 'after') {
    display: inline-block;
    position: relative;
    &:#{$pseudo}{
        display: inline-block;
        content: "";
        width: 0;
        height: 0;
        position: absolute;
        top: 50%;
        right: $h/2;
        margin-top: -$h/2;
        @if $direction == 'up'{
            border-bottom: $h solid $bgColor;
            border-right: $w/2 solid transparent;
            border-left: $w/2 solid transparent;
        }
        @if $direction == 'right'{
            border-left: $h solid $bgColor;
            border-top: $w/2 solid transparent;
            border-bottom: $w/2 solid transparent;
        }
        @if $direction == 'down'{
            border-top: $h solid $bgColor;
            border-right: $w/2 solid transparent;
            border-left: $w/2 solid transparent;
        }
        @if $direction == 'left'{
            border-right: $h solid $bgColor;
            border-top: $w/2 solid transparent;
            border-bottom: $w/2 solid transparent;
        }
        
    }
}

/**
 * [btn]   注：hover样式自定义
 * @param {[Number,Pixel]} $w          [按钮宽，如120px]
 * @param {[Number,Pixel]} $h          [按钮高，如40px]
 * @param {[Number,Pixel]} $radius     [按钮圆角半径，如：5px]
 * @param {[Number,Pixel]} $fontSize        [字体大小，如：16px]
 * @param {[color]}        $c          [字体颜色，如：#fff]
 * @param {[color]}        $bgColor       [背景颜色，如：#f00]
 */
@mixin btn($w,$h,$radius,$fontSize,$c,$bgColor) {
    display: inline-block;
    width: $w;
    height: $h;
    font-size: $fontSize;
    line-height: $h;
    color: $c;
    background: $bgColor;
    font-weight: 400;
    text-align: center;
    border: 0;
    outline: none;
    @include border-radius($radius);
}


/**
 * [loading1]   注：loadingWidth 定义在before，若引入动画需配合@keyframes kf-loading1同步修改loadingWidth值
 * @param {[Number,Pixel]} $w                [容器宽，如100%，120px]
 * @param {[Number,Pixel]} $h                [容器高，如30px]
 * @param {[Number,Pixel]} $loadingWidth     [进度条宽，如：70%,100px]
 * @param {[Number,Pixel]} $bgColor          [容器背景色值，如#fff]
 * @param {[color]}        $startColor       [进度条起始渐变色值，如：#fff]
 * @param {[color]}        $endColor         [进度条结束渐变色值，如：#f00]
 */
@mixin loading1($w,$h,$loadingWidth:100%,$bgColor: #fff,$startColor: #2989d8,$endColor: #7db9e8){
    position: relative;
    width: $w;
    height: $h;
    background: $bgColor;
    overflow: hidden;
    @include border-radius($h/2);
    &:before{
        position: absolute;
        content: "";
        top: 0;
        left: 0;
        display: inline-block;
        width: $loadingWidth;
        height: 100%;
        background: $startColor; /* Old browsers */
        background: -moz-linear-gradient(45deg, $startColor 33%, $endColor 34%, $endColor 59%, $startColor 60%); /* FF3.6+ */
        background: -webkit-gradient(linear, left bottom, right top, color-stop(33%,$startColor), color-stop(34%,$endColor), color-stop(59%,$endColor), color-stop(60%,$startColor)); /* Chrome,Safari4+ */
        background: -webkit-linear-gradient(45deg, $startColor 33%,$endColor 34%,$endColor 59%,$startColor 60%); /* Chrome10+,Safari5.1+ */
        background: -o-linear-gradient(45deg, $startColor 33%,$endColor 34%,$endColor 59%,$startColor 60%); /* Opera 11.10+ */
        background: -ms-linear-gradient(45deg, $startColor 33%,$endColor 34%,$endColor 59%,$startColor 60%); /* IE10+ */
        background: linear-gradient(45deg, $startColor 33%,$endColor 34%,$endColor 59%,$startColor 60%); /* W3C */
        filter: progid:DXImageTransform.Microsoft.gradient( startColorstr=$startColor, endColorstr=$endColor,GradientType=1 ); /* IE6-9 fallback on horizontal gradient */
        background-size: 60px 30px;
        @include border-radius($h/2);
        -webkit-animation: loading1 1s linear;
        animation: loading1 1s linear;
    }
}
/**
 * [kf-loading1]   注：非必须，为loading1引入动画，引入位置：最外层
 * @param {[Number,Pixel]} $loadingWidth     [进度条宽，如：70%,100px]
*/
@mixin kf-loading1($loadingWidth:100%){
    @-webkit-keyframes loading1{
        0% { width: 0%;}
        100% { width: $loadingWidth;}
    }
    @keyframes loading1{
        0% { width: 0%;}
        100% { width: $loadingWidth;}
    }
}


/**
 * [loading2]   注：
 * @param {[Number,Pixel]} $inRadius         [内圆半径，如：80px]
 * @param {[Number,Pixel]} $outRadius        [外圆半径，如：100px]
 * @param {[color]}        $bgColor          [容器背景色值，如#fff]
 * @param {[color]}        $borderColor      [圆环色值，如：#fff]
 */
@mixin loading2($inRadius: 80px,$outRadius: 100px,$bgColor: #2989d8,$borderColor: #7db9e8){
    position: relative;
    width: 2 * $outRadius;
    height: 2 * $outRadius;
    background: transparent;
    .circleBox{
        position: absolute;
        top: 0;
        width: $outRadius;
        height: 2 * $outRadius;
        overflow: hidden;
        &.left{
            left: 0;
        }
        &.right{
            right: 0;
        }
        .circle{
            position: absolute;
            width: 2 * $inRadius;
            height: 2 * $inRadius;
            border: $outRadius - $inRadius solid transparent;
            background: $bgColor;
            @include border-radius($outRadius);
            &.left{
                left: 0;
                border-bottom: $outRadius - $inRadius solid $borderColor;
                border-left: $outRadius - $inRadius solid $borderColor;
                -webkit-transform: rotate(45deg);
                -ms-transform: rotate(45deg);
                transform: rotate(45deg);
            }
            &.right{
                right: 0;
                border-top: $outRadius - $inRadius solid $borderColor;
                border-right: $outRadius - $inRadius solid $borderColor;
                -webkit-transform: rotate(45deg);
                -ms-transform: rotate(45deg);
                transform: rotate(45deg);
            }
        }
    }
}